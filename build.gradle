plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id 'org.springframework.boot' version '2.2.2.RELEASE'
  	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "application"
}



version "0.1"

group "no.nav.pam.sommernerds"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "https://github-package-registry-mirror.gc.nav.no/cached/maven-release"}
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    implementation "javax.annotation:javax.annotation-api"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation "io.micrometer:micrometer-registry-prometheus"

    implementation 'com.fasterxml.jackson.core:jackson-core:2.10.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.3"

    implementation 'org.apache.httpcomponents:httpclient:4.5.12'



    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "ch.qos.logback:logback-access:$logbackVersion"
    runtimeOnly "net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1"
    runtimeOnly "net.logstash.logback:logstash-logback-encoder:$logstashLogbackEncoderVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
  		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
      }
}

test.classpath += configurations.developmentOnly

mainClassName = "no.nav.pam.sommernerds.Application"

test {
    exclude "**/*IT.class"
    useJUnitPlatform()
}


compileKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    //Will retain parameter names for Java reflection
	    javaParameters = true
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    javaParameters = true
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
